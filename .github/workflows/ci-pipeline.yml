name: TechStyle CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  basic-checks:
    runs-on: ubuntu-latest
    name: Basic Quality Checks
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Basic Syntax Check
      run: |
        python -m py_compile src/app.py
        python -c "import src.app; print('✅ App imports successfully')"
        
    - name: Check Requirements
      run: |
        pip check
        echo "✅ All dependencies are compatible"

  test-and-quality:
    runs-on: ubuntu-latest
    name: Tests and Quality Checks
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
        
    - name: Run Unit Tests
      run: |
        pytest tests/ -v --tb=short
        
    - name: Run Integration Tests
      run: |
        pytest tests/integration/ -v --tb=short
      continue-on-error: false
        
    - name: Security Scan with Bandit
      run: |
        bandit -r . -f json -o bandit-report.json || true
        bandit -r . -ll
        
    - name: Dependency Security Check
      run: |
        safety scan --output json > safety-report.json || true
        safety check
        
    - name: Test Coverage Report
      run: |
        pytest --cov=. --cov-report=xml --cov-report=term
        
    - name: Upload Coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

  lint-and-format:
    runs-on: ubuntu-latest
    name: Code Quality and Linting
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
        
    - name: Code Formatting Check (Black)
      run: |
        black --check --diff .
        
    - name: Import Sorting Check (isort)
      run: |
        isort --check-only --diff .
        
    - name: Linting (Flake8)
      run: |
        flake8 . --count --statistics --exit-zero --output-file=flake8-report.txt
        
    - name: Type Checking (MyPy)
      run: |
        mypy . --ignore-missing-imports
      continue-on-error: true
        
    - name: Code Quality (Pylint)
      run: |
        pylint **/*.py --exit-zero --output-format=text --reports=y | tee pylint-report.txt
        
    - name: Security Scan (Bandit)
      run: |
        bandit -r . -f json -o bandit-report.json || true
        bandit -r . -ll
        
  test:
    runs-on: ubuntu-latest
    name: Run Tests
    needs: lint-and-format
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
        
    - name: Run Unit Tests
      run: |
        pytest tests/ -v --tb=short --cov=. --cov-report=xml
        
    - name: Upload Coverage
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false